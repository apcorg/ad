// foundation
.full-width {
   width: 100%;
   margin-left: auto;
   margin-right: auto;
   max-width: initial;
}

.pull-left {
	float: left;
}

.pull-right {
	float: right;
}

.block {
	display: block;
}

.text-muted {
  color: white;
}

.relative {
  position: relative;
}

.block {
  display: block;
}

// Custom type
.h5 {
  font-size: $h5-font-size;
}

.lh-1-1 {
  line-height: 1.1;
}


// Margins
@for $h from -7 to 11 {
  .m-#{$h*7} {
    margin: rem($h*7)!important;
    margin: ($h*7) + px !important;
  }
}

@for $i from -7 to 11 {
  .mt-#{$i*7} {
    margin-top: ($i*7) + px !important;
    margin-top: rem-calc($i*7)!important;
  }
}

@for $j from -7 to 11 {
  .mb-#{$j*7} {
    margin-bottom: rem($j*7)!important;
    margin-bottom: ($j*7) + px !important;
  }
}

@for $k from -7 to 11 {
  .ml-#{$k*7} {
    margin-left: rem($k*7)!important;
    margin-left: ($k*7) + px !important;
  }
}

@for $l from -7 to 11 {
  .mr-#{$l*7} {
    margin-right: rem-calc($l*7) !important;
    margin-right: ($l*7) + px !important;
  }
}

// Paddings
@for $m from -7 to 11 {
  .pt-#{$m*7} {
    padding-top: ($m*7) + px;
    padding-top: rem-calc($m*7);
  }
}

@for $m from 1 to 6 {
  .pt-#{$m} {
    padding-top: ($m) + px;
    padding-top: rem-calc($m);
  }
}

@for $n from -7 to 11 {
  .pb-#{$n*7} {
    padding-bottom: ($n*7) + px;
    padding-bottom: rem-calc($n*7);
  }
}

@for $o from -7 to 11 {
  .pl-#{$o*7} {
    padding-left: ($o*7) + px;
    padding-left: rem-calc($o*7);
  }
}

@for $p from -7 to 11 {
  .pr-#{$p*7} {
    padding-right: ($p*7) + px !important;
    padding-right: rem-calc($p*7)!important;
  }
}

@for $q from -7 to 11 {
  .p-#{$q*7} {
    padding: ($q*7) + px !important;
    padding: rem-calc($q*7)!important;
  }
}

@for $q from 2 to 8 {
  $my_percentage: $q*100%;
  .pvp-#{$q} {
    padding-top: $my_percentage; 
    padding-bottom: $my_percentage; 
  }
}

@for $q from 2 to 8 {
  $my_percentage: $q*1%;
  .php-#{$q} {
    padding-left: $my_percentage; 
    padding-right: $my_percentage; 
  }
}

@for $q from 1 to 5 {
  .ph-#{$q*7} {
    padding-left: ($q*7) + px !important;
    padding-left: rem-calc($q*7)!important;
    padding-right: ($q*7) + px !important;
    padding-right: rem-calc($q*7)!important;
  }
}

@for $q from 1 to 5 {
  .mh-#{$q*7} {
    margin-left: ($q*7) + px !important;
    margin-left: rem-calc($q*7)!important;
    margin-right: ($q*7) + px !important;
    margin-right: rem-calc($q*7)!important;
  }
}

@for $q from 1 to 5 {
  .pv-#{$q*7} {
    padding-top: ($q*7) + px !important;
    padding-top: rem-calc($q*7)!important;
    padding-bottom: ($q*7) + px !important;
    padding-bottom: rem-calc($q*7)!important;
  }
}


// helper functions
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  
  @return $string;
}

@function to-string($value) {
  @return inspect($value);
}

// icons
@for $q from 1 to 10 {
  $q-for-class: str-replace(to-string($q*0.5), '.', '-');
  // @debug ($q-for-class);
  .x#{$q-for-class} {
    font-size: $q*0.5 + rem !important;
  }
}

// buttons
.custom-button { 
  @include button;
  border: 2px solid $secondary-color;
  background: #fff;
  color: #000000;
  padding: rem-calc(7) rem-calc(21);
  margin: 0;
  &:hover {
    background: #fff;
    color: #000000;
  }
  &.slim {
    padding: rem-calc(3) rem-calc(7);
  }
  &.sec-color {
    color: $secondary-color;
  }
}

// classes with main colors
$colors: ("pri-color": $primary-color, "sec-color": $secondary-color);
@each $color-name, $color-value in $colors {
  .#{$color-name} {
    color: $color-value;
  }
}